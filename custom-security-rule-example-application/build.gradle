plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id "net.ltgt.apt-eclipse" version "0.21"
}

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor("io.micronaut.configuration:micronaut-openapi:1.5.1")
    annotationProcessor project(":custom-security-rule-openapi")
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-security-jwt"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation project(":custom-security-rule-lib")

    implementation("io.swagger.core.v3:swagger-annotations")

    testImplementation "cglib:cglib-nodep:3.3.0"
    testImplementation "org.objenesis:objenesis:3.1"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testImplementation "io.micronaut:micronaut-http-client"
}

test.classpath += configurations.developmentOnly

mainClassName = "custom.security.rule.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
//    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
